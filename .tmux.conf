# Configuration {{{

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# True Colors (24 bits){{{
# set -g default-command "${SHELL}"
# set -g default-terminal "screen-256color"
# set-option -ga terminal-overrides ",xterm-256color:Tc"
set -ga terminal-overrides ",xterm-256color*:Tc"
# }}}

# Prefix key {{{
set-option -g prefix C-a
# set-option -g prefix2 C-w
#}}}

# Escape time {{{
set -sg escape-time  0
# }}}

# Start Index{{{
#Window index
set -g base-index 1
# Pane index 
setw -g pane-base-index 1
# }}}

# Mouse{{{
setw -g mouse off
# }}}

# Windows{{{
set-window-option -g automatic-rename off
set-option -g focus-events on
set -g set-titles on   
# }}}

# Panes{{{

# Agressive resize
setw -g aggressive-resize on

# }}}

# Status Line {{{

# Colors
set -g status-style 'bg=#282C34,fg=#abb2bf'
# Active title 
set -g window-status-current-style 'bg=#282C34,fg=#ff8800,bright'
# Monitor activity
setw -g monitor-activity off
set -g visual-activity off

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 40
set -g status-right-length 40
set -g status-left '#[fg=#61AFEF]  '
set -g status-right ''
# set -g status-right '#[fg=#61AFEF,bg=#282c34]祥#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",")'
# set -g status-right '#[fg=#e06c75,bg=#282c34]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",")#[default] #[fg=#abb2bf]%H:%M:%S #[fg=#61AFEF]%Y-%m-%d'

# }}}

# Colors{{{

# One Darker Color Pallette {{{
# https://github.com/LunarVim/onedarker.nvim/blob/master/lua/onedarker/palette.lua
# 	fg = "#abb2bf",
# 	bg = "#1f2227",
# 	alt_bg = "#282c34",
# 	dark = "#282c34",
# 	accent = "#BBBBBB",
# 	dark_gray = "#2a2f3e",
# 	context = "#4b5263",
# 	popup_back = "#282c34",
# 	search_orange = "#613214",
# 	search_blue = "#5e81ac",
# 	gray = "#5c6370",
# 	light_gray = "#abb2bf",
# 	blue = "#61AFEF",
# 	dark_blue = "#223E55",
# 	green = "#98C379",
# 	cyan = "#56B6C2",
# 	red = "#e06c75",
# 	orange = "#D19A66",
# 	light_red = "#be5046",
# 	yellow = "#E5C07B",
# 	yellow_orange = "#D7BA7D",
# 	purple = "#C678DD",
# 	magenta = "#D16D9E",
# 	cursor_fg = "#515052",
# 	cursor_bg = "#AEAFAD",
# 	sign_add = "#587c0c",
# 	sign_change = "#0c7d9d",
# 	sign_delete = "#94151b",
# 	error_red = "#F44747",
# 	warning_orange = "#ff8800",
# 	info_yellow = "#FFCC66",
# 	hint_blue = "#4FC1FF",
# 	purple_test = "#ff007c",
# 	cyan_test = "#00dfff",
# 	ui_blue = "#264F78",
# }}}


# clock mode
# set-window-option -g clock-mode-colour green #green

# Windows{{{

# set -g window-style 'bg=#282C34,fg=#abb2bf'
# set -g window-active-style 'bg=#1f2227,fg=#abb2bf'

# Title 
# set -g window-status-style 'bg=#282C34,fg=#abb2bf'

# }}}

# Panes {{{

# Border
set -g pane-border-style 'fg=colour240'
set -g pane-active-border-style 'fg=#ff8800,bright'
# Number display
# set-option -g display-panes-active-colour '#61AFEF' #blue
# set-option -g display-panes-colour '#D19A66' #orange

#}}}

# Messages{{{
set -g message-style fg=#ff8800
# }}}

# }}}

#}}}

# Key Bindings{{{

# Session{{{
# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."
# Set current path as main
bind-key A attach -c "#{pane_current_path}"\; display-message "Current path setted as main"
# }}}

# Windows{{{

# set window split
bind-key v split-window -hc '#{pane_current_path}'
bind-key b split-window -vc '#{pane_current_path}'
# Swap windows and move with it
bind -r P swap-window -t -1\; select-window -t -1
bind -r N swap-window -t +1\; select-window -t +1
# Create named window
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# }}}

# Panes{{{

# Select
bind-key -r h if-shell "$is_vim" "send-keys Escape :lua\\ require\\'nvim-tmux-navigation\\'.NvimTmuxNavigateLeft() Enter" 'select-pane -L'
bind-key -r l if-shell "$is_vim" "send-keys Escape :lua\\ require\\'nvim-tmux-navigation\\'.NvimTmuxNavigateRight() Enter" 'select-pane -R'
bind-key -r k if-shell "$is_vim" "send-keys Escape :lua\\ require\\'nvim-tmux-navigation\\'.NvimTmuxNavigateUp() Enter" 'select-pane -U'
bind-key -r j if-shell "$is_vim" "send-keys Escape :lua\\ require\\'nvim-tmux-navigation\\'.NvimTmuxNavigateDown() Enter" 'select-pane -D'

# Swap 
bind -r J swap-pane -t '{down-of}'
bind -r K swap-pane -t '{up-of}'
bind -r H swap-pane -t '{right-of}'
bind -r L swap-pane -t '{left-of}'
bind -r S-Down  swap-pane -t '{down-of}'
bind -r S-Up    swap-pane -t '{up-of}'
bind -r S-Right swap-pane -t '{right-of}'
bind -r S-Left  swap-pane -t '{left-of}'

# Resize  
bind -r C-h resize-pane -L 5
bind -r C-l resize-pane -R 5
bind -r C-k resize-pane -U 5
bind -r C-j resize-pane -D 5
# bind-key -r C-j if-shell "$is_vim" "send-keys Escape :resize -5  Enter" 'resize-pane -D 5'
# bind-key -r C-k if-shell "$is_vim" "send-keys Escape :resize +5  Enter" 'resize-pane -U 5'
# bind-key -r C-l if-shell "$is_vim" "send-keys Escape :vertical-resize -5  Enter" 'resize-pane -R 5'
# bind-key -r C-h if-shell "$is_vim" "send-keys Escape :vertical-resize +5  Enter" 'resize-pane -L 5'

# }}}

# Copy Mode{{{
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -sel clip -i"
#unbind [
#bind-key -T copy-mode-vi Escape
#unbind p
#bind p paste-buffer
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection
# }}}

# Vim Navigation {{{
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

# }}}

# }}}

