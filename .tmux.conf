set -g default-terminal "screen-256color" # True Colors

# Prefix key
set -g prefix C-a
unbind C-b
bind-key C-a send-prefix


## Windows ##

# Navigate
set -g base-index 1 # Window index
# p -- previous (default)
# n -- next (default)

# Move
bind -r P swap-window -t -1\; select-window -t -1 # Move to previous
bind -r N swap-window -t +1\; select-window -t +1 # Move to next

# Create
bind-key c new-window -c "#{pane_current_path}"
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%' -c '#{pane_current_path}'" # Named window
set-option -wg automatic-rename off
set-option -g focus-events on
set -g set-titles on
#############

## Panes ##

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"

# Split
unbind %
unbind '"'
bind-key v split-window -hc '#{pane_current_path}'
bind-key b split-window -vc '#{pane_current_path}'
bind-key ] split-window -hc '#{pane_current_path}'
bind-key - split-window -vc '#{pane_current_path}'

# Navigate
# bind-key -r h select-pane -L
# bind-key -r l select-pane -R
# bind-key -r k select-pane -U
# bind-key -r j select-pane -D
bind-key -r h if-shell "$is_vim" "send-keys C-w h" 'select-pane -L'
bind-key -r l if-shell "$is_vim" "send-keys C-w l" 'select-pane -R'
bind-key -r k if-shell "$is_vim" "send-keys C-w k" 'select-pane -U'
bind-key -r j if-shell "$is_vim" "send-keys C-w j" 'select-pane -D'
setw -g pane-base-index 1 # Pane index

# Move
bind-key -r J swap-pane -dt '{down-of}'
bind-key -r K swap-pane -dt '{up-of}'
bind-key -r H swap-pane -dt '{right-of}'
bind-key -r L swap-pane -dt '{left-of}'
# bind-key -r J if-shell "$is_vim" "send-keys C-w J" "swap-pane -t '{down-of}'"
# bind-key -r K if-shell "$is_vim" "send-keys C-w K" "swap-pane -t '{up-of}'"
# bind-key -r H if-shell "$is_vim" "send-keys C-w H" "swap-pane -t '{right-of}'"
# bind-key -r L if-shell "$is_vim" "send-keys C-w L" "swap-pane -t '{left-of}'"

# Resize
setw -g aggressive-resize on
bind-key -r C-h resize-pane -L 5
bind-key -r C-l resize-pane -R 5
bind-key -r C-k resize-pane -U 5
bind-key -r C-j resize-pane -D 5
# bind-key -r C-j if-shell "$is_vim" "send-keys Escape :resize -5  Enter" 'resize-pane -D 5'
# bind-key -r C-k if-shell "$is_vim" "send-keys Escape :resize +5  Enter" 'resize-pane -U 5'
# bind-key -r C-l if-shell "$is_vim" "send-keys Escape :vertical-resize -5  Enter" 'resize-pane -R 5'
# bind-key -r C-h if-shell "$is_vim" "send-keys Escape :vertical-resize +5  Enter" 'resize-pane -L 5'
###########

# Accessibility
set -sg escape-time  0
setw -g mouse off
# Copy
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection
# bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -sel clip -i"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Set current path as main
bind-key A attach -c "#{pane_current_path}"\; display-message "Current path setted as main"



### Style ###

set -g pane-border-style 'fg=colour240'
set -g pane-active-border-style 'fg=#ff8800,bright'
set -g message-style fg=#ff8800
# Colors
set -g status-style 'bg=#282C34,fg=#abb2bf'
# Active title 
set -g window-status-current-style 'bg=#282C34,fg=#ff8800,bright'
# Monitor activity
setw -g monitor-activity off
set -g visual-activity off

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 40
set -g status-right-length 40
set -g status-left '#[fg=#61AFEF]  '
set -g status-right ''
# set -g status-right '#[fg=#61AFEF,bg=#282c34]祥#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",")'
# set -g status-right '#[fg=#e06c75,bg=#282c34]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",")#[default] #[fg=#abb2bf]%H:%M:%S #[fg=#61AFEF]%Y-%m-%d'

##############

# Plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'
##############
