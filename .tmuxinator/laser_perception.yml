# ~/.tmuxinator/mpc-obstacle-avoidance.yml

name: laser_perception 
root: ~/

# Optional tmux socket
# socket_name: foo

# Runs before everything. Use it to start daemons etc.
# pre: sudo /etc/rc.d/mysqld start

# Runs in each window and pane before window/pane specific commands. Useful for setting up interpreter versions.
# pre_window: rbenv shell 2.0.0-p247

# Pass command line options to tmux. Useful for specifying a different tmux.conf.
# tmux_options: -f ~/.tmux.mac.conf

# Change the command to call tmux.  This can be used by derivatives/wrappers like byobu.
# tmux_command: byobu

# Specifies (by name or index) which window will be selected on project startup. If not set, the first window is used.
# startup_window: editor

# Specitifes (by index) which pane of the specified window will be selected on project startup. If not set, the first pane is used.
# startup_pane: 1

# Controls whether the tmux session should be attached to automatically. Defaults to true.
# attach: false

# Runs after everything. Use it to attach to tmux with custom options etc.
# post: tmux -CC attach -t deliberative-obstacle-avoidance
#
on_project_start: ${OBSTACLE_AVOIDANCE_PROJECT}/setup.sh 192.168.30.14
windows:
  - robot:
      layout: main-vertical
      panes:
        - roslaunch --wait "$OBSTACLE_AVOIDANCE_PROJECT/launchers/throttle_pose_current.launch"
        - roslaunch --wait laser_range_limiter laser_range_limiter.launch laser_frame:="DJI/laser" config_file_yaml:=$OBSTACLE_AVOIDANCE_PROJECT/config/laser_range_limiter_outdoors.yaml
        - roslaunch --wait laser_obstacle_detector laser_obstacle_detector.launch laser_ref_frame:="DJI/laser" laser_scan_topic_name:="scan_out" config_file_yaml:=$OBSTACLE_AVOIDANCE_PROJECT/config/laser_obstacle_detector_outdoors.yaml
        - roslaunch --wait circle_mapping_ekf circle_mapping_ekf_dynamic.launch robot_frame:="DJI/base_link" laser_frame:="DJI/laser" config_file_yaml:=$OBSTACLE_AVOIDANCE_PROJECT/config/mapping_ekf_dynamic_outdoors.yaml          

